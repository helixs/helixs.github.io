<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>数据结构和算法 on Hugo Bootstrap</title>
    <link>/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/</link>
    <description>Recent content in 数据结构和算法 on Hugo Bootstrap</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright © 2016-{year} Razon Yang. All Rights Reserved.</copyright>
    <lastBuildDate>Tue, 30 Mar 2021 12:32:42 +0000</lastBuildDate><atom:link href="/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LinkedHashMap图解</title>
      <link>/posts/2021-03-30-linkedhashmap%E5%9B%BE%E8%A7%A3/</link>
      <pubDate>Tue, 30 Mar 2021 12:32:42 +0000</pubDate>
      
      <guid>/posts/2021-03-30-linkedhashmap%E5%9B%BE%E8%A7%A3/</guid>
      <description>跟hashMap的区别就是所有node节点增加了after和before属性 形成了双向链表，通过牺牲空间来保证有序性。</description>
    </item>
    
    <item>
      <title>LeetCode之在数组中计算某个两个数和等于目标值</title>
      <link>/posts/2021-03-26-leetcode%E4%B9%8B%E5%9C%A8%E6%95%B0%E7%BB%84%E4%B8%AD%E8%AE%A1%E7%AE%97%E6%9F%90%E4%B8%AA%E4%B8%A4%E4%B8%AA%E6%95%B0%E5%92%8C%E7%AD%89%E4%BA%8E%E7%9B%AE%E6%A0%87%E5%80%BC/</link>
      <pubDate>Fri, 26 Mar 2021 06:33:01 +0000</pubDate>
      
      <guid>/posts/2021-03-26-leetcode%E4%B9%8B%E5%9C%A8%E6%95%B0%E7%BB%84%E4%B8%AD%E8%AE%A1%E7%AE%97%E6%9F%90%E4%B8%AA%E4%B8%A4%E4%B8%AA%E6%95%B0%E5%92%8C%E7%AD%89%E4%BA%8E%E7%9B%AE%E6%A0%87%E5%80%BC/</guid>
      <description>链接：https://leetcode-cn.com/problems/two-sum 我的第一想法 双循环 再看看大神 看到没，循环只有一次，通过</description>
    </item>
    
    <item>
      <title>树和二叉树基本特性(2)</title>
      <link>/posts/2020-03-16-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91%E5%9F%BA%E6%9C%AC%E7%89%B9%E6%80%A72/</link>
      <pubDate>Mon, 16 Mar 2020 09:19:37 +0000</pubDate>
      
      <guid>/posts/2020-03-16-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91%E5%9F%BA%E6%9C%AC%E7%89%B9%E6%80%A72/</guid>
      <description>查找二叉树（Binary Sort Tree 二叉排序树）的基本定义 1、若查找树的左子树非空，则其左子树上的各个节点值均小于根节点的值 2、若查找树的右子树非空</description>
    </item>
    
    <item>
      <title>树和二叉树基本特性(1)</title>
      <link>/posts/2020-03-16-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91%E5%9F%BA%E6%9C%AC%E7%89%B9%E6%80%A71/</link>
      <pubDate>Mon, 16 Mar 2020 03:21:03 +0000</pubDate>
      
      <guid>/posts/2020-03-16-%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91%E5%9F%BA%E6%9C%AC%E7%89%B9%E6%80%A71/</guid>
      <description>树的基本概念就不介绍了，直接上干活 概念： 1、树的总结点数为n，总度数为k，那么n=k+1 因为度数就相当于子节点的个数，根节点就是那个+1 节点</description>
    </item>
    
    <item>
      <title>冒泡排序的概念和优化</title>
      <link>/posts/2019-09-02-%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F%E7%9A%84%E6%A6%82%E5%BF%B5%E5%92%8C%E4%BC%98%E5%8C%96/</link>
      <pubDate>Mon, 02 Sep 2019 09:33:36 +0000</pubDate>
      
      <guid>/posts/2019-09-02-%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F%E7%9A%84%E6%A6%82%E5%BF%B5%E5%92%8C%E4%BC%98%E5%8C%96/</guid>
      <description>冒泡排序为什么叫冒泡排序 -_- 我们都是宅农，应该都用锅烧过开水，或用来做饭或用来烧汤，不过我在小时候还烧过猪食。等水温达到一定程度，水就开始出了</description>
    </item>
    
  </channel>
</rss>
